exprs_assay <- read_excel(excel_sheets("/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx"))
library( readxl  )
excel_sheets("/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx")
exprs_assay <- read_excel(excel_sheets("/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx"))
library( readxl  )
excel_sheets("/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx")
exprs_assay <- read_excel(excel_sheets("/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx"))
library( readxl  )
excel_sheets("/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx")
# exprs_assay <- read_excel(excel_sheets("/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx"))
exprs_assay <- read_excel(path = "/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx", sheet = "exprs")
# exprs_assay<- readxl_example("/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx")
# read_excel(exprs_assay)
#readxl_example
View(exprs_assay)
exprs_assay_long <- exprs_assay %>% pivot_longer(where(is.numeric), names_to = "name", values_to = "values")
exprs_assay_long
ggplot(exprs_assay_long, aes(fill="gene")  ) +
geom_histogram() +
facet_wrap(~gene, nrow=3)
ggplot(exprs_assay_long, aes(x=gene) +
geom_histogram(fill="gene", color="black") +
facet_wrap(~gene, nrow=3)+
theme(axis.title = element_text(size=12),axis.text = element_text(size=8), axis.line = element_line (linewidth = 0.5))
ggplot(exprs_assay_long, aes(x=gene) +
geom_histogram(fill="gene", color="black") +
facet_wrap(~gene, nrow=3)+
theme(axis.title = element_text(size=12),axis.text = element_text(size=8), axis.line = element_line (linewidth = 0.5))+
labs(title="Gene expression profile", x= Gene, y =Level of expression)
ggplot(exprs_assay_long, aes(x=gene) +
geom_histogram(fill="gene", color="black") +
facet_wrap(~gene, nrow=3)+
theme(axis.title = element_text(size=12),axis.text = element_text(size=8), axis.line = element_line (linewidth = 0.5))+
labs(title="Gene expression profile", x= Gene, y =Level of expression)
ggplot(exprs_assay_long, aes(x=gene)) +
geom_histogram(fill="gene", color="black") +
facet_wrap(~gene, nrow=3)+
theme(axis.title = element_text(size=12),axis.text = element_text(size=8), axis.line = element_line (linewidth = 0.5))+
labs(title="Gene expression profile", x= Gene, y =Level of expression)
ggplot(exprs_assay_long, aes(x=gene)) +
geom_histogram(fill="gene", color="black") +
facet_wrap(~gene, nrow=3)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
) +
labs (title="Gene expression profile", x= "Genes", y ="Level of expression")
ggplot(exprs_assay_long, aes(x=gene)) +
geom_histogram(fill="gene", color="black") +
facet_wrap(~gene, nrow=3)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
) +
labs (title="Gene expression profile", x= "Genes", y ="Level of expression")
ggplot(exprs_assay_long, aes(x=values)) +
geom_histogram(fill="gene", color="black") +
facet_wrap(~gene, nrow=3)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
) +
labs (title="Gene expression profile", x= "Genes", y ="Level of expression")
ggplot(exprs_assay_long, aes(x=values)) +
geom_histogram(color="black") +
facet_wrap(~gene, nrow=3)
ggplot(exprs_assay_long, aes(x=values)) +
geom_histogram(fill="gene", color="black") +
facet_wrap(~gene, nrow=3)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
) +
labs (title="Gene expression profile", x= "Genes", y ="Level of expression")
ggplot(exprs_assay_long, aes(x=values)) +
geom_histogram(aes(fill=gene), color="black") +
facet_wrap(~gene, nrow=3)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
) +
labs (title="Gene expression profile", x= "Genes", y ="Level of expression")
ggplot(exprs_assay_long, aes(x=values)) +
geom_histogram(aes(fill=gene), color="black") +
facet_wrap(~gene, nrow=3)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
) +
labs (title="Gene expression profile", x= "Patients", y ="Level of expression")
excel_sheets( "/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx"  )
sample_info <-read_excel(path = "/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx", sheet = "sample_info")
sample_info
sample_info <- sample_info %>% factor(c("grade", "T","N","M"))
sample_info
sample_info <- sample_info %>%
select ("grade", "T","N","M") %>%
factor()
sample_info <- sample_info %>%
factor ( c("grade", "T","N","M"))
sample_info
exprs_sampleinfo <- sample_info %>%exprs_assay_long
exprs_sampleinfo <- sample_info %>% mutate (group=group)
exprs_sampleinfo <- sample_info %>% mutate (exprs_assay_long)
exprs_sampleinfo <- sample_info %>% mutate (paste0 (exprs_assay_long, sample_info)
exprs_sampleinfo
exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- exprs_assay_long %>% mutate (Clinical symptoms = sample_info)
excel_sheets( "/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx"  )
sample_info <-read_excel(path = "/project/shared/r/1_r_data_science/7-tidyverse-workflow/EH2011.xlsx", sheet = "sample_info")
sample_info
#sample_info <- sample_info %>%
# select ("grade", "T","N","M") %>%
# factor()
#sample_info
# sample_info <- sample_info %>%
#   factor ( c("grade", "T","N","M"))
sample_info <- sample_info %>%
mutate(grade = factor(grade))
sample_info
sample_info$grade
sample_info
#sample_info <- sample_info %>%
# select ("grade", "T","N","M") %>%
# factor()
#sample_info
# sample_info <- sample_info %>%
#   factor ( c("grade", "T","N","M"))
sample_info <- sample_info %>%
mutate(
grade = factor(grade),
T = factor(T),
N = factor(N),
M = factor(M)
)
sample_info
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- sample_info %>% inner_join(exprs_assay_long)
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- sample_info %>% left_join(exprs_assay_long)
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- sample_info %>% left_join(exprs_assay_long)
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- sample_info %>% left_join(exprs_assay_long)
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- sample_info %>% left_join(.,exprs_assay_long)
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- sample_info %>% left_join( ,exprs_assay_long)
View(sample_info)
View(sample_info)
View(exprs_assay_long)
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- sample_info %>% left_join(exprs_assay_long, by = ends_with(name))
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- sample_info %>% left_join(exprs_assay_long, by = ends_with("name"))
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- sample_info %>% left_join(exprs_assay_long, by = c("name", "unique_patient_ID"))
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
exprs_sampleinfo <- sample_info %>% left_join(exprs_assay_long, by = "unique_patient_ID")
View(exprs_assay)
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
#exprs_sampleinfo <- sample_info %>% left_join(exprs_assay_long, by = ends_with("name"))
exprs_sampleinfo <- sample_info %>% right_join(exprs_assay_long)
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
#exprs_sampleinfo <- sample_info %>% left_join(exprs_assay_long, by = ends_with("name"))
exprs_sampleinfo <- sample_info %>% right_join(exprs_assay_long, by=cross_join())
#exprs_sampleinfo <- sample_info %>% mutate (Clinical symptoms = exprs_assay_long)
#exprs_sampleinfo <- sample_info %>% left_join(exprs_assay_long, by = ends_with("name"))
exprs_sampleinfo <- sample_info %>% cross_join(exprs_assay_long)
exprs_sampleinfo
#
exprs_sampleinfo <- sample_info %>% left_join(exprs_assay_long, by = join_by(unique_patient_ID == name))
View(exprs_sampleinfo)
View(exprs_sampleinfo)
exprs_sampleinfo %>% select("sex", "values")
exprs_sampleinfo
#exprs_sampleinfo %>% select("sex", "values") %>% filter ()
exprs_sampleinfo %>%  filter ( by = sex)
#exprs_sampleinfo %>% select("sex", "values") %>% filter ()
exprs_sampleinfo %>%  filter ( .by = sex)
exprs_sampleinfo
#exprs_sampleinfo %>% select("sex", "values") %>% filter ()
exprs_sampleinfo %>%  group_by(sex)
exprs_sampleinfo
#exprs_sampleinfo %>% select("sex", "values") %>% filter (.by=sex)
#exprs_sampleinfo %>%  group_by(sex) %>% summarise()
exprs_sampleinfo %>%  group_by("M", "F")
exprs_sampleinfo
exprs_sampleinfo
exprs_sampleinfo %>% select(sex, values)
exprs_sampleinfo %>% select(sex, gene, values)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
summarise(mean(values))
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(sex) %>%
summarise(mean(values))
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(sex, gene) %>%
summarise(mean(values))
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values))
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values)) %>%
pivot_wider()
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values)) %>%
pivot_wider(names_from=name, vlaues_from = value)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values)) %>%
pivot_wider(names_from=name, values_from = value)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values)) %>%
pivot_wider(names_from = name, values_from = value)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values)) %>%
pivot_wider(names_from = name, values_from = value,)
View(exprs_sampleinfo)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values)) %>%
pivot_wider(where(is.numeric), names_from = name, values_from = value,)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values)) %>%
pivot_wider(names_from = name, values_from = value)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values)) %>%
pivot_wider(names_from = name, values_from = value)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values))
exprs_sampleinfo
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values))
exprs_sampleinfo %>%
pivot_wider(names_from = sex, values_from = mean(value))
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values))
exprs_sampleinfo %>%
pivot_wider(names_from = "sex", values_from = "mean(value)")
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean(values))
exprs_sampleinfo %>%
pivot_wider(names_from = name, values_from =value)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean_value = mean(values))
exprs_sampleinfo %>%
pivot_wider(names_from = sex, values_from = mean_value)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean_value = mean(values))
exprs_sampleinfo
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean_value = mean(values))
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean_value = mean(values)) %>%
pivot_wider(names_from = sex, values_from = mean_value)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean_value = mean(values)) %>%
pivot_wider(names_from = sex, values_from = mean_value) %>%
mutate(Difference = F - M)
exprs_sampleinfo
#exprs_sampleinfo %>%  group_by(sex) %>% summarise()
# exprs_sampleinfo %>%  filter(.by= M F)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean_value = mean(values)) %>%
pivot_wider(names_from = sex, values_from = mean_value) %>%
mutate(Difference = F - M)
exprs_sampleinfo
#exprs_sampleinfo %>%  group_by(sex) %>% summarise()
# exprs_sampleinfo %>%  filter(.by= M F)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean_value = mean(values)) %>%
pivot_wider(names_from = sex, values_from = mean_value) %>%
mutate(Difference = F - M)
#exprs_sampleinfo %>%  group_by(sex) %>% summarise()
# exprs_sampleinfo %>%  filter(.by= M F)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean_value = mean(values), .groups = "drop") %>%
pivot_wider(names_from = sex, values_from = mean_value) %>%
mutate(Difference = F - M)
#exprs_sampleinfo %>%  group_by(sex) %>% summarise()
# exprs_sampleinfo %>%  filter(.by= M F)
exprs_sampleinfo %>%
select(sex, gene, values) %>%
group_by(gene,sex) %>%
summarise(mean_value = mean(values), .groups = "drop") %>%
pivot_wider(names_from = sex, values_from = mean_value) %>%
mutate(Difference = F - M) %>%
slice_max(abs(Difference))
exprs_sampleinfo
table_for_ggplot <- exprs_sampleinfo %>%
filter(gene == "XIST")
table_for_ggplot
ggplot(table_for_ggplot, aes(x=values)) +
geom_histogram(aes(fill=T), color="black") +
facet_wrap(~sex, nrow=3)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
) +
labs
ggplot(table_for_ggplot, aes(x=values)) +
geom_histogram(aes(fill=T), color="black") +
facet_wrap(~sex, nrow=2)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
) +
labs
ggplot(table_for_ggplot, aes(x=values)) +
geom_histogram(aes(fill=T), color="black") +
facet_wrap(~sex, nrow=2)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
)
ggplot(exprs_sampleinfo, aes(x=values, fill ="gene")) +
geom_tile()
ggplot(exprs_sampleinfo, aes(x=values, fill ="gene")) +
geom_tile()
ggplot(table_for_ggplot, aes(x=grade, y=expression, fill =T))+
geom_boxplot()+
facet_wrap("sex")
ggplot(table_for_ggplot, aes(x=grade, y=expression, fill =T))+
geom_boxplot()+
facet_wrap("sex")
ggplot(table_for_ggplot, aes(x=grade, y=expression, fill ="T"))+
geom_boxplot()+
facet_wrap("sex")
ggplot(table_for_ggplot, aes(x=grade, y=expression, fill =grade))+
geom_boxplot()+
facet_wrap("sex")
ggplot(table_for_ggplot, aes(x=grade, y=expression, fill =grade))+
geom_boxplot()+
facet_wrap("sex")
ggplot(exprs_sampleinfo, aes(x=unique_patient_id, y=gene_names, fill =expression)) +
geom_raster()
ggplot(table_for_ggplot, aes(x=values)) +
geom_histogram(aes(fill=T), color="black") +
facet_wrap(~sex, nrow=2)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
)
#ggplot(table_for_ggplot, aes(x=grade, y=expression, fill =T))+
#    geom_boxplot()+
#    facet_wrap("sex")
#ggplot(table_for_ggplot, aes(x=grade, y=expression, fill =grade))+
#     geom_boxplot()+
#     facet_wrap("sex")
#ggplot(table_for_ggplot, aes(x=grade, y=expression, fill
#        =grade))+geom_voilin(scale="width")+geom_point()+facet_wrap("sex")
ggplot(exprs_sampleinfo, aes(x=unique_patient_id, y=gene_names, fill =expression)) +
geom_raster()
ggplot(exprs_sampleinfo, aes(x=unique_patient_id, y=gene_names, fill =expression)) +
geom_raster()
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene_names, fill =expression)) +
geom_raster()
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene, fill =expression)) +
geom_raster()
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene, fill =values)) +
geom_raster()
# Copy the code chunk above and tweak the aes(...) contents.
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene, fill =values)) +
geom_raster()
# Copy the code chunk above and tweak the aes(...) contents.
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene, fill =values, colour=unique_patient_ID)) +
geom_raster()
# Copy the code chunk above and tweak the aes(...) contents.
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene, fill =values, )) +
geom_raster()+
facet_wrap(~sex, nrow=2)
# Copy the code chunk above and tweak the aes(...) contents.
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene, fill =values, )) +
geom_raster()+
facet_wrap(~sex, nrow=2)+scale_fill_gradient(low = pink, high = purple)
# Copy the code chunk above and tweak the aes(...) contents.
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene, fill =values, )) +
geom_raster()+
facet_wrap(~sex, nrow=2)+scale_fill_gradient(low = "pink"", high ="purple)
# Copy the code chunk above and tweak the aes(...) contents.
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene, fill =values, )) +
geom_raster()+
facet_wrap(~sex, nrow=2)+scale_fill_gradient(low = "green", high ="purple")
# Copy the code chunk above and tweak the aes(...) contents.
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene, fill =values, )) +
geom_raster()+
facet_wrap(~sex, nrow=2)+scale_fill_gradient(low = "green", high ="red")
# Copy the code chunk above and tweak the aes(...) contents.
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene, fill =values, )) +
geom_raster()+
facet_wrap(~sex, nrow=2, colour="sex")+scale_fill_gradient(low = "green", high ="red")
# Copy the code chunk above and tweak the aes(...) contents.
ggplot(exprs_sampleinfo, aes(x=unique_patient_ID, y=gene, fill =values, )) +
geom_raster()+
facet_wrap(~sex, nrow=2)+scale_fill_gradient(low = "green", high ="red")
#values here is the expression coloumn
ggplot(table_for_ggplot, aes(x=grade, y=values, fill
=grade))+geom_voilin(scale="width")+geom_point()+facet_wrap("sex")
ggplot(table_for_ggplot, aes(x=grade, y=values,    fill=grade))+geom_violin(scale="width")+geom_point()+facet_wrap("sex")
ggplot(table_for_ggplot, aes(x=values)) +
geom_histogram(aes(fill=T), color="black") +
facet_wrap(~sex, nrow=2)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
)
#ggplot(table_for_ggplot, aes(x=grade, y=values, fill =T))+
#    geom_boxplot()+
#    facet_wrap("sex")
#ggplot(table_for_ggplot, aes(x=grade, y=values, fill =grade))+
#     geom_boxplot()+
#     facet_wrap("sex")
ggplot(table_for_ggplot, aes(x=grade, y=values,    fill=grade))+geom_violin(scale="width")+geom_point()+facet_wrap("sex")
#need to plot a box plot or violin plot or histogram
ggplot(table_for_ggplot, aes(x=values)) +
geom_histogram(aes(fill=T), color="black") +
facet_wrap(~sex, nrow=2)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
)
#ggplot(table_for_ggplot, aes(x=grade, y=values, fill =T))+
#    geom_boxplot()+
#    facet_wrap("sex")
ggplot(table_for_ggplot, aes(x=grade, y=values, fill =grade))+
geom_boxplot()+
facet_wrap("sex")
ggplot(table_for_ggplot, aes(x=grade, y=values,    fill=grade))+geom_violin(scale="width")+geom_point()+facet_wrap("sex")
#need to plot a box plot or violin plot or histogram
ggplot(table_for_ggplot, aes(x=values)) +
geom_histogram(aes(fill=T), color="black") +
facet_wrap(~sex, nrow=2)+
theme (axis.title = element_text(size=12),
axis.text = element_text(size=8),
axis.line = element_line (linewidth = 0.5)
)
ggplot(table_for_ggplot, aes(x=grade, y=values, fill =T))+
geom_boxplot()+
facet_wrap("sex")
ggplot(table_for_ggplot, aes(x=grade, y=values, fill =grade))+
geom_boxplot()+
facet_wrap("sex")
ggplot(table_for_ggplot, aes(x=grade, y=values,    fill=grade))+geom_violin(scale="width")+geom_point()+facet_wrap("sex")
#need to plot a box plot or violin plot or histogram
words %>%
str_trim() %>%
str_c(collapse = " ")
#| label: load-packages
#| include: false
library(tidyverse)
library(ggplot2)
library(tidyverse)
library(ggplot2)
x <- 4
x %>% sqrt()
x <- 4
sqrt(x)
iris %>%
ggplot(aes(Sepal.Length, Sepal.Width)) +
geom_point()
iris %>%
select(Sepal.Length, Sepal.Width, Species) %>%
slice_head(n = 3)
iris_raw <- read_csv("data/iris.csv")
file.copy("/project/shared/r/1_r_data_science/6-tidyverse/iris.csv", ".")
iris.csv
head(iris.csv)
