a <- c("brain", 2, TRUE)
a
b
b
b
b <- c(1:5)
b
c <- 40
c
save(a,b,c, "testworkspace.RData")
testworkspace.RData
#load("workspace.RData")
load("testworkspace.RData")
save(a,b,c, "testworkspace.RData")
save(a,b,c, "testworkspace.RData")
save(a,b,c,"testworkspace.RData")
save(a,b,c,"testworkspace.RData")
save("a","b","c","testworkspace.RData")
save("a","b","c",file ="testworkspace.RData")
#load("workspace.RData")
load("testworkspace.RData")
#load("workspace.RData")
load("testworkspace.RData")
d <- 100
d
saveRDS(d,file = d.rds)
saveRDS(d,file = "d.rds")
rm(a,b)
load("testworkspace.RData")
#Remove one object from your workspace.
rm(a,b)
ls()
rm(list = ls())
ls()
getwd()
dir.create("test_directory")
setwd ("/project/ndcn1484/r-week-1/base-r-day-2/test_directory")
dir.create("/project/ndcn1484/r-week-1/base-r-day-2/test_directory")
saveRDS(d,"d.rds")
saveRDS(d,"d.rds")
d <- 100
saveRDS(d,"d.rds")
dir.create("new_directory")
setwd ("new_directory")
getwd()
load("../testworkspace.RData")
d <- 100
new_d <-  readRDS("d.rds")
d
new_d <-  readRDS("d.rds")
new_d
new_d <-  readRDS(file = "d.rds")
new_d <-  readRDS(file = "d.rds")
new_d
new_d <-  readRDS(file = "d.rds")
d <- 100
d
saveRDS(d,"d.rds")
new_d <-  readRDS(file = "d.rds")
new_d
m <- readRDS(file="/project/shared/r/1_r_data_science/2-base/my_day2matrix.rds")
m
colSums(m)
m$new_colums <- colSums(m)
m$new_column <- colSums(m)
m$new_column <- c(colSums(m))
m <- readRDS(file="/project/shared/r/1_r_data_science/2-base/my_day2matrix.rds")
m
colSums(m)
m$new_column <- c(colSums(m))
m$new_column <- colSums(m)
cbind(m, col_sum = colSums(m))
m <- readRDS(file="/project/shared/r/1_r_data_science/2-base/my_day2matrix.rds")
m
colSums(m)
m1 <-  cbind(m, col_sum = colSums(m))
m1
data("ToothGrowth")
help --ToothGrowth
#help page file browse - ToothGrowth to enlist class types. ALso
str(ToothGrowth)
mean(ToothGrowth$len)
max(ToothGrowth$len)
min(ToothGrowth$len)
colSums(ToothGrowth$len)
rowSums(ToothGrowth$len)
data(airquality)
help("airquality")
class(airquality)
colnames(airquality)
#Sort the data frame by increasing value in the Ozone column
order(airquality$Ozone)
View(airquality)
#Sort the data frame by increasing value in the Ozone column
Ozone_ordered <- order(airquality$Ozone)
[order(Ozone_ordered)]
airquality [,Ozone_ordered]
airquality [Ozone_ordered, ]
#Sort the data frame by Month in increasing order and Temp in decreasing order
#o <- order(df$batch, df$group) is it this?
airquality_Month_Temp <-  airquality[order(airquality$Month, -airquality$Temp)
view(airquality_Month_Temp)
view("airquality_Month_Temp")
airquality_Month_Temp
#Sort the data frame by Month in increasing order and Temp in decreasing order
#o <- order(df$batch, df$group) is it this?
airquality_Month_Temp <-  airquality[order(airquality$Month, -airquality$Temp), ]
airquality_Month_Temp
airquality_Month_Temp <-  airquality[order(airquality$Month, -airquality$Temp, na.rm = TRUE), ]
airquality_Month_Temp <-  airquality[order(airquality$Month, -airquality$Temp), ]
write.table("airquality_Month_Temp", header = TRUE, sep = "\t")
write.delim("airquality_Month_Temp", header = TRUE, sep = "\t")
write.delim(airquality_Month_Temp, header = TRUE, sep = "\t")
airquality_Month_Temp <-  airquality[order(airquality$Month, -airquality$Temp), ]
airquality_Month_Temp
write.delim(airquality_Month_Temp, header = TRUE, sep = "\t")
write.table(latest_sorted, file = "airquality_Month_Temp", header = TRUE, sep = "\t")
write.table(latest_sorted, file = "airquality_Month_Temp", sep = "\t")
write.table(latest_sorted.txt)
write.table(output, latest_sorted.txt)
write.table(output, latest_sorted.txt)
write.table(output, "latest_sorted.txt")
return (total)
a=2, b=2,
a=2, b=2,
hypothenuse <- function (a, b)
{comment hypotenuse
total <- sqrt(a^2 + b^2)
total
hypothenuse (3,4)
hypothenuse(3,4)
return (total)}
hypothenuse <- function (a, b)
{comment hypothenuse
hypothenuse(3,4)
total <- sqrt(a^2 + b^2)
hypothenuse <- function (a, b) {
total <- sqrt(a^2 + b^2)
return (total)}
hypothenuse(3,4)
hypothenuse <- function (a, b) {
comment (calculation)
total <- sqrt(a^2 + b^2)
return (total)}
hypothenuse(3,4)
hypothenuse(3,4)
ypothenuse <- function (a, b) {
comment (calculation)
total <- sqrt(a^2 + b^2)
return (total)
hypothenuse(3,4)
hypothenuse(3,4)
hypothenuse <- function (a, b) {
comment ()
total <- sqrt(a^2 + b^2)
return (total)}
hypothenuse(3,4)
hypothenuse <- function (a, b) {
total <- sqrt(a^2 + b^2)
return (total)}
hypothenuse(3,4)
hypothenuse(3,4)
x <-  1:10
x
x
x <-  c(1:10)
x
x
x <- 1:10
x
x <- 1:10
x
lapply(x=1:10, FUN = log2)
lapply(x=1:10, FUN = log2)
lapply(x=1:10, FUN = log2)
lapply(x, FUN = log2)
sapply(x, FUN = log2)
lapply(l, FUN = sum)
l= list(c(TRUE, FALSE), 1:3, c(x,y,z), "R course")
l <- list(c(TRUE, FALSE), 1:3, c(x,y,z), "R course")
l <- list(c(TRUE, FALSE), 1:3, c(x,y,z), "R course")
l <- list(c(TRUE, FALSE), 1:3, c(x,y,z), "R course")
l <- list(c(TRUE, FALSE), 1:3, c(x,z), "R course")
for(i^3 in 1:7){ print (i)}
for(i in 1:7){ print (i^3)}
for( i in colnames(iris)) {print (i=colnames & colSums)}
colnames(iris)
for( i in colnames(iris)) {print (i=colnames(iris) & colSums(iris))}
for( i in colnames(iris)) {print paste0(column_names ":" nchar(column_names)}
print(nchar(colnames(iris)))
nchar(colnames(iris))
paste0(print (colnames(iris)), nchar(colnames(iris)) )
for( column_names in colnames(iris)) {print (paste0(column_names, ":", nchar(column_names))}
paste0(print (colnames(iris)),":", nchar(colnames(iris)) )
paste0(print (":", nchar(colnames(iris)) )
paste0(print (":", nchar(colnames(iris)) )
paste0(print (,":", nchar(colnames(iris)) )
paste0(print (,":", nchar(colnames(iris)) )
s(iris), ":", nchar(colnames(iris)))
i <- paste0(colnames, ":", nchar(colnames))
i <- paste0(colnames, ":", nchar(colnames))
i <- paste0(colnames(iris), ":", nchar(colnames(iris)))
i
for( n in colnames(iris)) {print (paste0(n, ":", nchar(n))}
for (n in colnamse(iris)) {print(paste0(colnames(iris), ":", nchar(colnames(iris))))}
for (n in colnames(iris)) {print(paste0(colnames(iris), ":", nchar(colnames(iris))))}
for( n in colnames(iris)) {print (paste0(n, ":", nchar(n)))}
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
for (n in colnames(iris)) {print(paste0(n, ":", nchar(n)))}
l <- list(c(TRUE, FALSE), 1:3, c(x,z), "R course")
l <- list(c(TRUE, FALSE), 1:3, c(x,z), "Rcourse")
l <- list(c(TRUE, FALSE), 1:3, c(1,2,3), "R course")
l
lapply(l, FUN = sum)
lapply(l, FUN = sum)
lapply(l, FUN = sum, na.rm=TRUE)
l
lapply(l, FUN = sum, na.rm=TRUE)
l
lapply (l, FUN = sum, na.rm=TRUE)
knitr::opts_chunk$set(echo = TRUE)
l <- list(c(TRUE, FALSE), 1:3, c(1,2,3), "R course")
l <- list(c(TRUE, FALSE), 1:3, c(1,2,3), "R course")
l <- list(c(TRUE, FALSE), 1:3, c(1,2,3), "R course")
l
l <- list(c(TRUE, FALSE), 1:3, c(1,2,3), "R course")
l
lapply(l,sum)
l <- list(c(TRUE, FALSE), 1:3, c(1,2,3), "R course")
l
lapply(l,sum, na.rm=TRUE)
l
lapply (l, FUN = sum, na.rm=TRUE)
lapply (l, sum, na.rm=TRUE)
lapply (l, sum)
sapply(l, sum, na.rm=TRUE)
sapply(l, sum, na.rm=FALSE)
lapply (l, sum, na.rm=FALSE)
sapply(l, rep=3, each=3)
sapply(rep(x=l), each=3)
sapply(rep(x=l), each=3)
sapply(l, FUN = rep((l), each=3)
l <- list(c(TRUE, FALSE), 1:3, c(1,2,3), "R course")
l <- list(c(TRUE, FALSE), 1:3, c(1,2,3), "R course")
l
sapply(l, FUN = rep((l), each=3)
sapply(l, FUN = rep(l, each=3)
sapply(l, FUN = rep(l, each=3)
sapply(l, rep(l, each =3))
sapply(l, rep, each =3))
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
sapply(l, rep, each =3)
sapply ${1=l}, ${rep(l, each =3)}
sapply(${1:l}, ${2:rep(l, each =3)})
sapply(${1:l}, ${2:rep(l, each =3)})
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
sapply(rep (1, each =3))
sapply(FUN = rep (1, each =3))
sapply(FUN = rep (l, each =3))
l
sapply(FUN = rep (l, each =3))
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
sapply(FUN = rep, each =3)
sapply(l, FUN = rep, each =3)
sapply(l, FUN = rep, times =3)
write.table(airquality_Month_Temp, file = "airquality_sorted.txt", sep = "\t", row.names = FALSE, quote = FALSE)
head(airquality_sorted.txt)
read.table ("airquality_sorted.txt")
read.delim("airquality_sorted.txt")
read.csv("airquality_sorted.txt")
read.csv("airquality_sorted.txt", sep = ",")
read.csv("airquality_sorted.txt", header = TRUE, quote = FALSE, sep="\t")
read.csv("airquality_sorted.txt", header = TRUE, quote = FALSE, sep="\t")
read.csv("airquality_sorted.txt", header = TRUE, quote = FALSE, sep=" ")
read.csv("airquality_sorted.txt", header = TRUE, quote = FALSE, sep=",")
read.csv("airquality_sorted.txt", header = TRUE, quotes = FALSE, sep=",")
read.csv("airquality_sorted.txt")
View("airquality_sorted.txt")
View(airquality_sorted.txt)
View(airquality_sorted.txt)
help(view)
help("view")
hep(nchar)
help(nchar)
help(view)
help(view)
view(airquality_Month_Temp)
view(airquality)
view(airquality)
view("airquality")
head("airquality")
head(airquality)
buildings <- data.frame(
site = c(1, 2, 3),
name = c("b1", "b2", "b3"))
survey_data <- data.frame(
survey = c("A", "A", "A", "B", "B", "B"),
location = c(1, 2, 3, 2, 3, 1),
efficiency = c(51, 64, 70, 71, 80, 58))
buidings_survery <- merge(x=buildings, y=survey_data, by =(site,location) , all=FALSE)
buidings_survery <- merge(x=buildings, y=survey_data, by ="c(site,location)" , all=FALSE)
buidings_survery <- merge(x=buildings, y=survey_data, by ="c("site","location"")" , all=FALSE)
buidings_survery <- merge(x=buildings, y=survey_data, by = c("site","location"") , all=FALSE)
buidings_survery
paste0(print (,":", nchar(colnames(iris)) )
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
buildings_survey
buildings <- data.frame(
site = c(1, 2, 3),
name = c("b1", "b2", "b3"))
survey_data <- data.frame(
survey = c("A", "A", "A", "B", "B", "B"),
location = c(1, 2, 3, 2, 3, 1),
efficiency = c(51, 64, 70, 71, 80, 58))
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
buildings_survery <- merge(x=buildings, y=survey_data, by.x = "site", by.y ="location")
buildings_survery
merge.data.frame(x=buildings, y=survey_data, by.x = "site", by.y ="location")
merge.data.frame(x=buildings, y=survey_data, by.x = "site", by.y ="location", all=FALSE)
buildings_survery <- merge(x=buildings, y=survey_data, by.x = "site", by.y ="location", all=TRUE)
buildings_survery
#Compute the mean of each numeric column each month in the airquality data frame using aggregate().
#Make sure NA values are removed
#aggregate(x = iris, by = list(species = iris$Species), FUN = mean, na.rm = TRUE)
head(airquality)
aggregate(x=airquality, by = list(month=airquality$Month), FUN = mean, na.rm = TRUE)
aggregate(x=airquality, by=list(month = airquality$Solar.R, FUN = mean, na.rm = TRUE))
aggregate(x=airquality, by=list(month = airquality$Solar.R, FUN = mean, na.rm = TRUE))
aggregate(x=airquality, by=list(Month = airquality$Solar.R, FUN = mean, na.rm = TRUE))
aggregate(x=airquality, by=list(solar.r_Month = airquality$Solar.R, FUN = mean, na.rm = TRUE))
paste0(print (,":", nchar(colnames(iris)) )
i <- paste0(colnames(iris), ":", nchar(colnames(iris))) #this worked to add info to i in the required format
aggregate(x=airquality, by = list(Month = airquality$Solar.R), FUN = mean, na.rm = TRUE)
aggregate(x=airquality, by = list(solar_R_Month = airquality$Solar.R), FUN = mean, na.rm = TRUE)
ifelse(test= c("red", "orange", "purple", "yellow", "pink", "blue"),yes="pass", no = "Fail")
my_colours <- c("red", "orange", "purple", "yellow", "pink", "blue")
my_colours
nchar(my_colours)
i <- nchar(my_colours){print i=4}
ifelse(test= nchar(my_colours)==4, yes="pass", no = "Fail")
ifelse(test= nchar(my_colours)=4, yes="pass", no = "Fail")
ifelse(test= nchar(my_colours)==4, my_colour, yes="pass", no = "Fail")
ifelse(test= nchar(my_colours)==4, my_colours, yes="pass", no = "Fail")
ifelse(test= nchar(my_colours)==4, my_colours, yes="pass", no = "Fail")
ifelse(test= nchar(my_colours)==4, my_colours, NA, yes="pass", no = "Fail")
ifelse(test= nchar(my_colours)==4, my_colours, NA)
